# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "uas" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { device = "/dev/disk/by-uuid/647449ab-e8d3-4e58-86e4-d2a6d0ba7ddc";
  #     fsType = "btrfs";
  #     options = [ "subvol=@root" "compress=zstd" ];
  #   };

  # fileSystems."/nix" =
  #   { device = "/dev/disk/by-uuid/647449ab-e8d3-4e58-86e4-d2a6d0ba7ddc";
  #     fsType = "btrfs";
  #     options = [ "subvol=@nix" "compress=zstd" ];
  #   };

  # fileSystems."/persist" =
  #   { device = "/dev/disk/by-uuid/647449ab-e8d3-4e58-86e4-d2a6d0ba7ddc";
  #     fsType = "btrfs";
  #     options = [ "subvol=@persist" "compress=zstd" ];
  #     neededForBoot = true;
  #   };

  # fileSystems."/persist/_snapshots" =
  #   { device = "/dev/disk/by-uuid/647449ab-e8d3-4e58-86e4-d2a6d0ba7ddc";
  #     fsType = "btrfs";
  #     options = [ "subvol=@persist_snapshots" "compress=zstd" ];
  #     neededForBoot = true;
  #   };

  # fileSystems."/persist/home" =
  #   { device = "/dev/disk/by-uuid/647449ab-e8d3-4e58-86e4-d2a6d0ba7ddc";
  #     fsType = "btrfs";
  #     options = [ "subvol=@persist_home" "compress=zstd" ];
  #     neededForBoot = true;
  #   };

  # fileSystems."/boot" =
  #   { device = "/dev/disk/by-uuid/9571-46D8";
  #     fsType = "vfat";
  #   };

  # swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0f3u1u4c2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
